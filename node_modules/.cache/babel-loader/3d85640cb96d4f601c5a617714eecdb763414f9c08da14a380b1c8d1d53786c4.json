{"ast":null,"code":"import _slicedToArray from \"/workspaces/mantine-react-router-cats/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState, useCallback } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect.js';\nfunction useEyeDropper() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    supported = _useState2[0],\n    setSupported = _useState2[1];\n  useIsomorphicEffect(function () {\n    setSupported(typeof window !== \"undefined\" && \"EyeDropper\" in window);\n  }, []);\n  var open = useCallback(function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (supported) {\n      var eyeDropper = new window.EyeDropper();\n      return eyeDropper.open(options);\n    }\n    return void 0;\n  }, [supported]);\n  return {\n    supported: supported,\n    open: open\n  };\n}\nexport { useEyeDropper };","map":{"version":3,"mappings":";;;AAEO,SAASA,aAAa,GAAG;EAC9B,gBAAkCC,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA1CC,SAAS;IAAEC,YAAY;EAC9BC,mBAAmB,CAAC,YAAM;IACxBD,YAAY,CAAC,OAAOE,MAAM,KAAK,WAAW,IAAI,YAAY,IAAIA,MAAM,CAAC;EACzE,CAAG,EAAE,EAAE,CAAC;EACN,IAAMC,IAAI,GAAGC,WAAW,CAAC,YAAkB;IAAA,IAAjBC,OAAO,uEAAG,EAAE;IACpC,IAAIN,SAAS,EAAE;MACb,IAAMO,UAAU,GAAG,IAAIJ,MAAM,CAACK,UAAU,EAAE;MAC1C,OAAOD,UAAU,CAACH,IAAI,CAACE,OAAO,CAAC;IACrC;IACI,OAAO,KAAK,CAAC;EACjB,CAAG,EAAE,CAACN,SAAS,CAAC,CAAC;EACf,OAAO;IAAEA,SAAS,EAATA,SAAS;IAAEI,IAAI,EAAJA;EAAI,CAAE;AAC5B","names":["useEyeDropper","useState","supported","setSupported","useIsomorphicEffect","window","open","useCallback","options","eyeDropper","EyeDropper"],"sources":["/workspaces/mantine-react-router-cats/node_modules/@mantine/hooks/src/use-eye-dropper/use-eye-dropper.ts"],"sourcesContent":["import { useCallback, useState } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect';\n\ninterface EyeDropperOpenOptions {\n  signal?: AbortSignal;\n}\n\nexport interface EyeDropperOpenReturnType {\n  sRGBHex: string;\n}\n\nexport function useEyeDropper() {\n  const [supported, setSupported] = useState(false);\n\n  useIsomorphicEffect(() => {\n    setSupported(typeof window !== 'undefined' && 'EyeDropper' in window);\n  }, []);\n\n  const open = useCallback(\n    (options: EyeDropperOpenOptions = {}): Promise<EyeDropperOpenReturnType> => {\n      if (supported) {\n        const eyeDropper = new (window as any).EyeDropper();\n        return eyeDropper.open(options);\n      }\n\n      return undefined;\n    },\n    [supported]\n  );\n\n  return { supported, open };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}