{"ast":null,"code":"import _slicedToArray from \"/workspaces/mantine-react-router-cats/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState } from 'react';\nfunction useUncontrolled(_ref) {\n  var value = _ref.value,\n    defaultValue = _ref.defaultValue,\n    finalValue = _ref.finalValue,\n    _ref$onChange = _ref.onChange,\n    onChange = _ref$onChange === void 0 ? function () {} : _ref$onChange;\n  var _useState = useState(defaultValue !== void 0 ? defaultValue : finalValue),\n    _useState2 = _slicedToArray(_useState, 2),\n    uncontrolledValue = _useState2[0],\n    setUncontrolledValue = _useState2[1];\n  var handleUncontrolledChange = function handleUncontrolledChange(val) {\n    setUncontrolledValue(val);\n    onChange == null ? void 0 : onChange(val);\n  };\n  if (value !== void 0) {\n    return [value, onChange, true];\n  }\n  return [uncontrolledValue, handleUncontrolledChange, false];\n}\nexport { useUncontrolled };","map":{"version":3,"mappings":";;AACO,SAASA,eAAe,OAM5B;EAAA,IALDC,KAAK,QAALA,KAAK;IACLC,YAAY,QAAZA,YAAY;IACZC,UAAU,QAAVA,UAAU;IAAA,qBACVC,QAAQ;IAARA,QAAQ,8BAAG,YAAM,CACnB,CAAG;EAED,gBAAkDC,QAAQ,CAACH,YAAY,KAAK,KAAK,CAAC,GAAGA,YAAY,GAAGC,UAAU,CAAC;IAAA;IAAxGG,iBAAiB;IAAEC,oBAAoB;EAC9C,IAAMC,wBAAwB,GAAG,SAA3BA,wBAAwB,CAAIC,GAAG,EAAK;IACxCF,oBAAoB,CAACE,GAAG,CAAC;IACzBL,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACK,GAAG,CAAC;EAC7C,CAAG;EACD,IAAIR,KAAK,KAAK,KAAK,CAAC,EAAE;IACpB,OAAO,CAACA,KAAK,EAAEG,QAAQ,EAAE,IAAI,CAAC;EAClC;EACE,OAAO,CAACE,iBAAiB,EAAEE,wBAAwB,EAAE,KAAK,CAAC;AAC7D","names":["useUncontrolled","value","defaultValue","finalValue","onChange","useState","uncontrolledValue","setUncontrolledValue","handleUncontrolledChange","val"],"sources":["/workspaces/mantine-react-router-cats/node_modules/@mantine/hooks/src/use-uncontrolled/use-uncontrolled.ts"],"sourcesContent":["import { useState } from 'react';\n\ninterface UseUncontrolledInput<T> {\n  /** Value for controlled state */\n  value?: T;\n\n  /** Initial value for uncontrolled state */\n  defaultValue?: T;\n\n  /** Final value for uncontrolled state when value and defaultValue are not provided */\n  finalValue?: T;\n\n  /** Controlled state onChange handler */\n  onChange?(value: T): void;\n}\n\nexport function useUncontrolled<T>({\n  value,\n  defaultValue,\n  finalValue,\n  onChange = () => {},\n}: UseUncontrolledInput<T>): [T, (value: T) => void, boolean] {\n  const [uncontrolledValue, setUncontrolledValue] = useState(\n    defaultValue !== undefined ? defaultValue : finalValue\n  );\n\n  const handleUncontrolledChange = (val: T) => {\n    setUncontrolledValue(val);\n    onChange?.(val);\n  };\n\n  if (value !== undefined) {\n    return [value as T, onChange, true];\n  }\n\n  return [uncontrolledValue as T, handleUncontrolledChange, false];\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}