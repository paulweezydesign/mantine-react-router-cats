{"ast":null,"code":"import _slicedToArray from \"/workspaces/mantine-react-router-cats/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/workspaces/mantine-react-router-cats/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return a;\n};\nvar __spreadProps = function __spreadProps(a, b) {\n  return __defProps(a, __getOwnPropDescs(b));\n};\nfunction round(number) {\n  var digits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var base = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Math.pow(10, digits);\n  return Math.round(base * number) / base;\n}\nfunction hslaToHsva(_ref) {\n  var h = _ref.h,\n    s = _ref.s,\n    l = _ref.l,\n    a = _ref.a;\n  var ss = s * ((l < 50 ? l : 100 - l) / 100);\n  return {\n    h: h,\n    s: ss > 0 ? 2 * ss / (l + ss) * 100 : 0,\n    v: l + ss,\n    a: a\n  };\n}\nvar angleUnits = {\n  grad: 360 / 400,\n  turn: 360,\n  rad: 360 / (Math.PI * 2)\n};\nfunction parseHue(value) {\n  var unit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"deg\";\n  return Number(value) * (angleUnits[unit] || 1);\n}\nvar HSL_REGEXP = /hsla?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\nfunction parseHsla(color) {\n  var match = HSL_REGEXP.exec(color);\n  if (!match) {\n    return {\n      h: 0,\n      s: 0,\n      v: 0,\n      a: 1\n    };\n  }\n  return hslaToHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    l: Number(match[4]),\n    a: match[5] === void 0 ? 1 : Number(match[5]) / (match[6] ? 100 : 1)\n  });\n}\nfunction rgbaToHsva(_ref2) {\n  var r = _ref2.r,\n    g = _ref2.g,\n    b = _ref2.b,\n    a = _ref2.a;\n  var max = Math.max(r, g, b);\n  var delta = max - Math.min(r, g, b);\n  var hh = delta ? max === r ? (g - b) / delta : max === g ? 2 + (b - r) / delta : 4 + (r - g) / delta : 0;\n  return {\n    h: round(60 * (hh < 0 ? hh + 6 : hh)),\n    s: round(max ? delta / max * 100 : 0),\n    v: round(max / 255 * 100),\n    a: a\n  };\n}\nfunction parseHex(color) {\n  var hex = color[0] === \"#\" ? color.slice(1) : color;\n  if (hex.length === 3) {\n    return rgbaToHsva({\n      r: parseInt(hex[0] + hex[0], 16),\n      g: parseInt(hex[1] + hex[1], 16),\n      b: parseInt(hex[2] + hex[2], 16),\n      a: 1\n    });\n  }\n  return rgbaToHsva({\n    r: parseInt(hex.slice(0, 2), 16),\n    g: parseInt(hex.slice(2, 4), 16),\n    b: parseInt(hex.slice(4, 6), 16),\n    a: 1\n  });\n}\nfunction parseHexa(color) {\n  var hex = color[0] === \"#\" ? color.slice(1) : color;\n  var roundA = function roundA(a2) {\n    return Math.round(parseInt(a2, 16) / 255 * 100) / 100;\n  };\n  if (hex.length === 4) {\n    var withoutOpacity2 = hex.slice(0, 3);\n    var a2 = roundA(hex[3] + hex[3]);\n    var hsvaColor2 = __spreadProps(__spreadValues({}, parseHex(withoutOpacity2)), {\n      a: a2\n    });\n    return hsvaColor2;\n  }\n  var withoutOpacity = hex.slice(0, 6);\n  var a = roundA(hex.slice(6, 8));\n  var hsvaColor = __spreadProps(__spreadValues({}, parseHex(withoutOpacity)), {\n    a: a\n  });\n  return hsvaColor;\n}\nvar RGB_REGEXP = /rgba?\\(?\\s*(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\nfunction parseRgba(color) {\n  var match = RGB_REGEXP.exec(color);\n  if (!match) {\n    return {\n      h: 0,\n      s: 0,\n      v: 0,\n      a: 1\n    };\n  }\n  return rgbaToHsva({\n    r: Number(match[1]) / (match[2] ? 100 / 255 : 1),\n    g: Number(match[3]) / (match[4] ? 100 / 255 : 1),\n    b: Number(match[5]) / (match[6] ? 100 / 255 : 1),\n    a: match[7] === void 0 ? 1 : Number(match[7]) / (match[8] ? 100 : 1)\n  });\n}\nvar VALIDATION_REGEXP = {\n  hex: /^#?([0-9A-F]{3}){1,2}$/i,\n  hexa: /^#?([0-9A-F]{4}){1,2}$/i,\n  rgb: /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/i,\n  rgba: /^rgba\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/i,\n  hsl: /hsl\\(\\s*(\\d+)\\s*,\\s*(\\d+(?:\\.\\d+)?%)\\s*,\\s*(\\d+(?:\\.\\d+)?%)\\)/i,\n  hsla: /^hsla\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*(\\d*(?:\\.\\d+)?)\\)$/i\n};\nvar CONVERTERS = {\n  hex: parseHex,\n  hexa: parseHexa,\n  rgb: parseRgba,\n  rgba: parseRgba,\n  hsl: parseHsla,\n  hsla: parseHsla\n};\nfunction isColorValid(color) {\n  for (var _i = 0, _Object$entries = Object.entries(VALIDATION_REGEXP); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n      regexp = _Object$entries$_i[1];\n    if (regexp.test(color)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction parseColor(color) {\n  if (typeof color !== \"string\") {\n    return {\n      h: 0,\n      s: 0,\n      v: 0,\n      a: 1\n    };\n  }\n  if (color === \"transparent\") {\n    return {\n      h: 0,\n      s: 0,\n      v: 0,\n      a: 0\n    };\n  }\n  var trimmed = color.trim();\n  for (var _i2 = 0, _Object$entries2 = Object.entries(VALIDATION_REGEXP); _i2 < _Object$entries2.length; _i2++) {\n    var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n      rule = _Object$entries2$_i[0],\n      regexp = _Object$entries2$_i[1];\n    if (regexp.test(trimmed)) {\n      return CONVERTERS[rule](trimmed);\n    }\n  }\n  return {\n    h: 0,\n    s: 0,\n    v: 0,\n    a: 1\n  };\n}\nexport { isColorValid, parseColor, parseHex, parseHexa, parseHsla, parseHue, parseRgba, round };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","round","number","digits","base","Math","hslaToHsva","h","s","l","ss","v","angleUnits","grad","turn","rad","PI","parseHue","unit","Number","HSL_REGEXP","parseHsla","color","match","exec","rgbaToHsva","r","g","max","delta","min","hh","parseHex","hex","slice","length","parseInt","parseHexa","roundA","a2","withoutOpacity2","hsvaColor2","withoutOpacity","hsvaColor","RGB_REGEXP","parseRgba","VALIDATION_REGEXP","hexa","rgb","rgba","hsl","hsla","CONVERTERS","isColorValid","entries","regexp","test","parseColor","trimmed","trim","rule"],"sources":["/workspaces/mantine-react-router-cats/node_modules/@mantine/core/src/ColorPicker/converters/parsers.ts"],"sourcesContent":["import { HsvaColor, RgbaColor, ColorFormat } from '../types';\n\nexport function round(number: number, digits = 0, base = 10 ** digits) {\n  return Math.round(base * number) / base;\n}\n\nfunction hslaToHsva({ h, s, l, a }): HsvaColor {\n  const ss = s * ((l < 50 ? l : 100 - l) / 100);\n\n  return {\n    h,\n    s: ss > 0 ? ((2 * ss) / (l + ss)) * 100 : 0,\n    v: l + ss,\n    a,\n  };\n}\n\nconst angleUnits: Record<string, number> = {\n  grad: 360 / 400,\n  turn: 360,\n  rad: 360 / (Math.PI * 2),\n};\n\nexport function parseHue(value: string, unit = 'deg') {\n  return Number(value) * (angleUnits[unit] || 1);\n}\n\nconst HSL_REGEXP =\n  /hsla?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n\nexport function parseHsla(color: string): HsvaColor {\n  const match = HSL_REGEXP.exec(color);\n\n  if (!match) {\n    return { h: 0, s: 0, v: 0, a: 1 };\n  }\n\n  return hslaToHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    l: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\n  });\n}\n\nfunction rgbaToHsva({ r, g, b, a }: RgbaColor): HsvaColor {\n  const max = Math.max(r, g, b);\n  const delta = max - Math.min(r, g, b);\n\n  const hh = delta\n    ? max === r\n      ? (g - b) / delta\n      : max === g\n      ? 2 + (b - r) / delta\n      : 4 + (r - g) / delta\n    : 0;\n\n  return {\n    h: round(60 * (hh < 0 ? hh + 6 : hh)),\n    s: round(max ? (delta / max) * 100 : 0),\n    v: round((max / 255) * 100),\n    a,\n  };\n}\n\nexport function parseHex(color: string): HsvaColor {\n  const hex = color[0] === '#' ? color.slice(1) : color;\n\n  if (hex.length === 3) {\n    return rgbaToHsva({\n      r: parseInt(hex[0] + hex[0], 16),\n      g: parseInt(hex[1] + hex[1], 16),\n      b: parseInt(hex[2] + hex[2], 16),\n      a: 1,\n    });\n  }\n\n  return rgbaToHsva({\n    r: parseInt(hex.slice(0, 2), 16),\n    g: parseInt(hex.slice(2, 4), 16),\n    b: parseInt(hex.slice(4, 6), 16),\n    a: 1,\n  });\n}\n\nexport function parseHexa(color: string): HsvaColor {\n  const hex = color[0] === '#' ? color.slice(1) : color;\n\n  const roundA = (a: string) => Math.round((parseInt(a, 16) / 255) * 100) / 100;\n  if (hex.length === 4) {\n    const withoutOpacity = hex.slice(0, 3);\n    const a = roundA(hex[3] + hex[3]);\n\n    const hsvaColor: HsvaColor = { ...parseHex(withoutOpacity), a };\n    return hsvaColor;\n  }\n\n  const withoutOpacity = hex.slice(0, 6);\n  const a = roundA(hex.slice(6, 8));\n  const hsvaColor: HsvaColor = { ...parseHex(withoutOpacity), a };\n  return hsvaColor;\n}\n\nconst RGB_REGEXP =\n  /rgba?\\(?\\s*(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n\nexport function parseRgba(color: string): HsvaColor {\n  const match = RGB_REGEXP.exec(color);\n\n  if (!match) {\n    return { h: 0, s: 0, v: 0, a: 1 };\n  }\n\n  return rgbaToHsva({\n    r: Number(match[1]) / (match[2] ? 100 / 255 : 1),\n    g: Number(match[3]) / (match[4] ? 100 / 255 : 1),\n    b: Number(match[5]) / (match[6] ? 100 / 255 : 1),\n    a: match[7] === undefined ? 1 : Number(match[7]) / (match[8] ? 100 : 1),\n  });\n}\n\nconst VALIDATION_REGEXP: Record<ColorFormat, RegExp> = {\n  hex: /^#?([0-9A-F]{3}){1,2}$/i,\n  hexa: /^#?([0-9A-F]{4}){1,2}$/i,\n  rgb: /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/i,\n  rgba: /^rgba\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/i,\n  hsl: /hsl\\(\\s*(\\d+)\\s*,\\s*(\\d+(?:\\.\\d+)?%)\\s*,\\s*(\\d+(?:\\.\\d+)?%)\\)/i,\n  hsla: /^hsla\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*(\\d*(?:\\.\\d+)?)\\)$/i,\n};\n\nconst CONVERTERS: Record<ColorFormat, (color: string) => HsvaColor> = {\n  hex: parseHex,\n  hexa: parseHexa,\n  rgb: parseRgba,\n  rgba: parseRgba,\n  hsl: parseHsla,\n  hsla: parseHsla,\n};\n\nexport function isColorValid(color: string) {\n  // eslint-disable-next-line no-restricted-syntax\n  for (const [, regexp] of Object.entries(VALIDATION_REGEXP)) {\n    if (regexp.test(color)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport function parseColor(color: string): HsvaColor {\n  if (typeof color !== 'string') {\n    return { h: 0, s: 0, v: 0, a: 1 };\n  }\n\n  if (color === 'transparent') {\n    return { h: 0, s: 0, v: 0, a: 0 };\n  }\n\n  const trimmed = color.trim();\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const [rule, regexp] of Object.entries(VALIDATION_REGEXP)) {\n    if (regexp.test(trimmed)) {\n      return CONVERTERS[rule](trimmed);\n    }\n  }\n\n  return { h: 0, s: 0, v: 0, a: 1 };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}