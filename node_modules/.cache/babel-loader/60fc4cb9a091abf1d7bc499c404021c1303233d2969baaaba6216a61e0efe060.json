{"ast":null,"code":"import _toConsumableArray from \"/workspaces/mantine-react-router-cats/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nfunction getSortedBreakpoints(theme, breakpoints) {\n  if (breakpoints.length === 0) {\n    return breakpoints;\n  }\n  var property = \"maxWidth\" in breakpoints[0] ? \"maxWidth\" : \"minWidth\";\n  var sorted = _toConsumableArray(breakpoints).sort(function (a, b) {\n    return theme.fn.size({\n      size: b[property],\n      sizes: theme.breakpoints\n    }) - theme.fn.size({\n      size: a[property],\n      sizes: theme.breakpoints\n    });\n  });\n  return property === \"minWidth\" ? sorted.reverse() : sorted;\n}\nexport { getSortedBreakpoints };","map":{"version":3,"mappings":";AAAO,SAASA,oBAAoB,CAACC,KAAK,EAAEC,WAAW,EAAE;EACvD,IAAIA,WAAW,CAACC,MAAM,KAAK,CAAC,EAAE;IAC5B,OAAOD,WAAW;EACtB;EACE,IAAME,QAAQ,GAAG,UAAU,IAAIF,WAAW,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,UAAU;EACvE,IAAMG,MAAM,GAAG,mBAAIH,WAAW,EAAEI,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;IAAA,OAAKP,KAAK,CAACQ,EAAE,CAACC,IAAI,CAAC;MAAEA,IAAI,EAAEF,CAAC,CAACJ,QAAQ,CAAC;MAAEO,KAAK,EAAEV,KAAK,CAACC;IAAW,CAAE,CAAC,GAAGD,KAAK,CAACQ,EAAE,CAACC,IAAI,CAAC;MAAEA,IAAI,EAAEH,CAAC,CAACH,QAAQ,CAAC;MAAEO,KAAK,EAAEV,KAAK,CAACC;IAAW,CAAE,CAAC;EAAA,EAAC;EAC/K,OAAOE,QAAQ,KAAK,UAAU,GAAGC,MAAM,CAACO,OAAO,EAAE,GAAGP,MAAM;AAC5D","names":["getSortedBreakpoints","theme","breakpoints","length","property","sorted","sort","a","b","fn","size","sizes","reverse"],"sources":["/workspaces/mantine-react-router-cats/node_modules/@mantine/core/src/SimpleGrid/get-sorted-breakpoints/get-sorted-breakpoints.ts"],"sourcesContent":["import { MantineTheme } from '@mantine/styles';\n\nexport function getSortedBreakpoints<T extends Record<string, any>>(\n  theme: MantineTheme,\n  breakpoints: T[]\n) {\n  if (breakpoints.length === 0) {\n    return breakpoints;\n  }\n\n  const property = 'maxWidth' in breakpoints[0] ? 'maxWidth' : 'minWidth';\n  const sorted = [...breakpoints].sort(\n    (a, b) =>\n      theme.fn.size({ size: b[property], sizes: theme.breakpoints }) -\n      theme.fn.size({ size: a[property], sizes: theme.breakpoints })\n  );\n\n  return property === 'minWidth' ? sorted.reverse() : sorted;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}