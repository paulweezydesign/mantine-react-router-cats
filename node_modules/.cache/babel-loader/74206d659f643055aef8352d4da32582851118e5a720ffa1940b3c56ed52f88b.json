{"ast":null,"code":"import React from'react';import{useGlobalContext}from'../context';import{FaTimes}from'react-icons/fa';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Modal=function Modal(){var _useGlobalContext=useGlobalContext(),isModalOpen=_useGlobalContext.isModalOpen,closeModal=_useGlobalContext.closeModal;return/*#__PURE__*/_jsx(\"div\",{onClick:closeModal,className:\"\".concat(isModalOpen?'modal-overlay show-modal':'modal-overlay'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"modal content\"}),/*#__PURE__*/_jsx(\"button\",{className:\"close-modal-btn\",onClick:closeModal,children:/*#__PURE__*/_jsx(FaTimes,{})})]})});};export default Modal;","map":{"version":3,"names":["React","useGlobalContext","FaTimes","Modal","isModalOpen","closeModal"],"sources":["/workspaces/mantine-react-router-cats/src/components/Modal.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useGlobalContext } from '../context';\r\nimport { FaTimes } from 'react-icons/fa';\r\n\r\nconst Modal = () => {\r\n  const { isModalOpen, closeModal } = useGlobalContext();\r\n  return (\r\n    <div\r\n      onClick={closeModal}\r\n      className={`${\r\n        isModalOpen ? 'modal-overlay show-modal' : 'modal-overlay'\r\n      }`}\r\n    >\r\n      <div className=\"modal-container\">\r\n        <h3>modal content</h3>\r\n        <button className=\"close-modal-btn\" onClick={closeModal}>\r\n          <FaTimes></FaTimes>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,gBAAgB,KAAQ,YAAY,CAC7C,OAASC,OAAO,KAAQ,gBAAgB,CAAC,wFAEzC,GAAMC,MAAK,CAAG,QAARA,MAAK,EAAS,CAClB,sBAAoCF,gBAAgB,EAAE,CAA9CG,WAAW,mBAAXA,WAAW,CAAEC,UAAU,mBAAVA,UAAU,CAC/B,mBACE,YACE,OAAO,CAAEA,UAAW,CACpB,SAAS,WACPD,WAAW,CAAG,0BAA0B,CAAG,eAAe,CACzD,uBAEH,aAAK,SAAS,CAAC,iBAAiB,wBAC9B,oBAAI,eAAa,EAAK,cACtB,eAAQ,SAAS,CAAC,iBAAiB,CAAC,OAAO,CAAEC,UAAW,uBACtD,KAAC,OAAO,IAAW,EACZ,GACL,EACF,CAEV,CAAC,CAED,cAAeF,MAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}