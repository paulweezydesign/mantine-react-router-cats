{"ast":null,"code":"import _slicedToArray from \"/workspaces/mantine-react-router-cats/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState } from 'react';\nfunction useDisclosure(initialState, callbacks) {\n  var _useState = useState(initialState),\n    _useState2 = _slicedToArray(_useState, 2),\n    opened = _useState2[0],\n    setOpened = _useState2[1];\n  var open = function open() {\n    var _a;\n    if (!opened) {\n      setOpened(true);\n      (_a = callbacks == null ? void 0 : callbacks.onOpen) == null ? void 0 : _a.call(callbacks);\n    }\n  };\n  var close = function close() {\n    var _a;\n    if (opened) {\n      setOpened(false);\n      (_a = callbacks == null ? void 0 : callbacks.onClose) == null ? void 0 : _a.call(callbacks);\n    }\n  };\n  var toggle = function toggle() {\n    opened ? close() : open();\n  };\n  return [opened, {\n    open: open,\n    close: close,\n    toggle: toggle\n  }];\n}\nexport { useDisclosure };","map":{"version":3,"mappings":";;AACO,SAASA,aAAa,CAACC,YAAY,EAAEC,SAAS,EAAE;EACrD,gBAA4BC,QAAQ,CAACF,YAAY,CAAC;IAAA;IAA3CG,MAAM;IAAEC,SAAS;EACxB,IAAMC,IAAI,GAAG,SAAPA,IAAI,GAAS;IACjB,IAAIC,EAAE;IACN,IAAI,CAACH,MAAM,EAAE;MACXC,SAAS,CAAC,IAAI,CAAC;MACf,CAACE,EAAE,GAAGL,SAAS,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACM,MAAM,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGD,EAAE,CAACE,IAAI,CAACP,SAAS,CAAC;IAChG;EACA,CAAG;EACD,IAAMQ,KAAK,GAAG,SAARA,KAAK,GAAS;IAClB,IAAIH,EAAE;IACN,IAAIH,MAAM,EAAE;MACVC,SAAS,CAAC,KAAK,CAAC;MAChB,CAACE,EAAE,GAAGL,SAAS,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACS,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGJ,EAAE,CAACE,IAAI,CAACP,SAAS,CAAC;IACjG;EACA,CAAG;EACD,IAAMU,MAAM,GAAG,SAATA,MAAM,GAAS;IACnBR,MAAM,GAAGM,KAAK,EAAE,GAAGJ,IAAI,EAAE;EAC7B,CAAG;EACD,OAAO,CAACF,MAAM,EAAE;IAAEE,IAAI,EAAJA,IAAI;IAAEI,KAAK,EAALA,KAAK;IAAEE,MAAM,EAANA;EAAM,CAAE,CAAC;AAC1C","names":["useDisclosure","initialState","callbacks","useState","opened","setOpened","open","_a","onOpen","call","close","onClose","toggle"],"sources":["/workspaces/mantine-react-router-cats/node_modules/@mantine/hooks/src/use-disclosure/use-disclosure.ts"],"sourcesContent":["import { useState } from 'react';\n\nexport function useDisclosure(\n  initialState: boolean,\n  callbacks?: { onOpen?(): void; onClose?(): void }\n) {\n  const [opened, setOpened] = useState(initialState);\n\n  const open = () => {\n    if (!opened) {\n      setOpened(true);\n      callbacks?.onOpen?.();\n    }\n  };\n\n  const close = () => {\n    if (opened) {\n      setOpened(false);\n      callbacks?.onClose?.();\n    }\n  };\n\n  const toggle = () => {\n    opened ? close() : open();\n  };\n\n  return [opened, { open, close, toggle }] as const;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}