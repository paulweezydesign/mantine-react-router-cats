{"ast":null,"code":"import _slicedToArray from \"/workspaces/mantine-react-router-cats/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { createSafeContext } from '@mantine/utils';\nimport { POPOVER_ERRORS } from './Popover.errors.js';\nvar _createSafeContext = createSafeContext(POPOVER_ERRORS.context),\n  _createSafeContext2 = _slicedToArray(_createSafeContext, 2),\n  PopoverContextProvider = _createSafeContext2[0],\n  usePopoverContext = _createSafeContext2[1];\nexport { PopoverContextProvider, usePopoverContext };","map":{"version":3,"mappings":";;;AAEY,yBAA+CA,iBAAiB,CAACC,cAAc,CAACC,OAAO;EAAA;EAArFC,sBAAsB;EAAEC,iBAAiB","names":["createSafeContext","POPOVER_ERRORS","context","PopoverContextProvider","usePopoverContext"],"sources":["/workspaces/mantine-react-router-cats/node_modules/@mantine/core/src/Popover/Popover.context.ts"],"sourcesContent":["import { ReferenceType } from '@floating-ui/react-dom-interactions';\nimport { createSafeContext } from '@mantine/utils';\nimport { MantineNumberSize, MantineShadow, ClassNames, Styles } from '@mantine/styles';\nimport { FloatingPosition, ArrowPosition } from '../Floating';\nimport { MantineTransition } from '../Transition';\nimport { POPOVER_ERRORS } from './Popover.errors';\nimport { PopoverWidth, PopoverStylesNames, PopoverStylesParams } from './Popover.types';\n\ninterface PopoverContext {\n  x: number;\n  y: number;\n  arrowX: number;\n  arrowY: number;\n  arrowRef: React.RefObject<HTMLDivElement>;\n  opened: boolean;\n  transition: MantineTransition;\n  transitionDuration: number;\n  exitTransitionDuration: number;\n  reference: (node: ReferenceType) => void;\n  floating: (node: HTMLElement) => void;\n  width?: PopoverWidth;\n  withArrow: boolean;\n  arrowSize: number;\n  arrowOffset: number;\n  arrowRadius: number;\n  arrowPosition: ArrowPosition;\n  trapFocus: boolean;\n  placement: FloatingPosition;\n  withinPortal: boolean;\n  closeOnEscape: boolean;\n  zIndex: React.CSSProperties['zIndex'];\n  radius?: MantineNumberSize;\n  shadow?: MantineShadow;\n  onClose?(): void;\n  getDropdownId(): string;\n  getTargetId(): string;\n  controlled: boolean;\n  onToggle(): void;\n  withRoles: boolean;\n  targetProps: Record<string, any>;\n  disabled: boolean;\n  returnFocus: boolean;\n  classNames: ClassNames<PopoverStylesNames>;\n  styles: Styles<PopoverStylesNames, PopoverStylesParams>;\n  unstyled: boolean;\n  __staticSelector: string;\n}\n\nexport const [PopoverContextProvider, usePopoverContext] = createSafeContext<PopoverContext>(\n  POPOVER_ERRORS.context\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}