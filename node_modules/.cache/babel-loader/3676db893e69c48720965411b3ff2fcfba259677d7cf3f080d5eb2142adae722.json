{"ast":null,"code":"import _slicedToArray from \"/workspaces/mantine-react-router-cats/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState, useRef, useCallback } from 'react';\nfunction useIntersection(options) {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    entry = _useState2[0],\n    setEntry = _useState2[1];\n  var observer = useRef();\n  var ref = useCallback(function (element) {\n    if (observer.current) {\n      observer.current.disconnect();\n      observer.current = null;\n    }\n    if (element === null) {\n      setEntry(null);\n      return;\n    }\n    observer.current = new IntersectionObserver(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n        _entry = _ref2[0];\n      setEntry(_entry);\n    }, options);\n    observer.current.observe(element);\n  }, [options == null ? void 0 : options.rootMargin, options == null ? void 0 : options.root, options == null ? void 0 : options.threshold]);\n  return {\n    ref: ref,\n    entry: entry\n  };\n}\nexport { useIntersection };","map":{"version":3,"mappings":";;AACO,SAASA,eAAe,CAACC,OAAO,EAAE;EACvC,gBAA0BC,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAjCC,KAAK;IAAEC,QAAQ;EACtB,IAAMC,QAAQ,GAAGC,MAAM,EAAE;EACzB,IAAMC,GAAG,GAAGC,WAAW,CAAC,UAACC,OAAO,EAAK;IACnC,IAAIJ,QAAQ,CAACK,OAAO,EAAE;MACpBL,QAAQ,CAACK,OAAO,CAACC,UAAU,EAAE;MAC7BN,QAAQ,CAACK,OAAO,GAAG,IAAI;IAC7B;IACI,IAAID,OAAO,KAAK,IAAI,EAAE;MACpBL,QAAQ,CAAC,IAAI,CAAC;MACd;IACN;IACIC,QAAQ,CAACK,OAAO,GAAG,IAAIE,oBAAoB,CAAC,gBAAc;MAAA;QAAZC,MAAM;MAClDT,QAAQ,CAACS,MAAM,CAAC;IACtB,CAAK,EAAEZ,OAAO,CAAC;IACXI,QAAQ,CAACK,OAAO,CAACI,OAAO,CAACL,OAAO,CAAC;EACrC,CAAG,EAAE,CAACR,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACc,UAAU,EAAEd,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACe,IAAI,EAAEf,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACgB,SAAS,CAAC,CAAC;EAC1I,OAAO;IAAEV,GAAG,EAAHA,GAAG;IAAEJ,KAAK,EAALA;EAAK,CAAE;AACvB","names":["useIntersection","options","useState","entry","setEntry","observer","useRef","ref","useCallback","element","current","disconnect","IntersectionObserver","_entry","observe","rootMargin","root","threshold"],"sources":["/workspaces/mantine-react-router-cats/node_modules/@mantine/hooks/src/use-intersection/use-intersection.ts"],"sourcesContent":["import { useCallback, useRef, useState } from 'react';\n\nexport function useIntersection<T extends HTMLElement = any>(\n  options?: ConstructorParameters<typeof IntersectionObserver>[1]\n) {\n  const [entry, setEntry] = useState<IntersectionObserverEntry>(null);\n\n  const observer = useRef<IntersectionObserver>();\n\n  const ref = useCallback(\n    (element: T | null) => {\n      if (observer.current) {\n        observer.current.disconnect();\n        observer.current = null;\n      }\n\n      if (element === null) {\n        setEntry(null);\n        return;\n      }\n\n      observer.current = new IntersectionObserver(([_entry]) => {\n        setEntry(_entry);\n      }, options);\n\n      observer.current.observe(element);\n    },\n    [options?.rootMargin, options?.root, options?.threshold]\n  );\n\n  return { ref, entry };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}