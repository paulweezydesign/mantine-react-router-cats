{"ast":null,"code":"import _defineProperty from \"/workspaces/mantine-react-router-cats/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/workspaces/mantine-react-router-cats/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { forwardRef, useState } from 'react';\nimport useStyles from './Thumb.styles.js';\nimport { Box } from '../../Box/Box.js';\nimport { Transition } from '../../Transition/Transition.js';\nvar Thumb = forwardRef(function (_ref, ref) {\n  var max = _ref.max,\n    min = _ref.min,\n    value = _ref.value,\n    position = _ref.position,\n    label = _ref.label,\n    dragging = _ref.dragging,\n    onMouseDown = _ref.onMouseDown,\n    color = _ref.color,\n    classNames = _ref.classNames,\n    styles = _ref.styles,\n    size = _ref.size,\n    labelTransition = _ref.labelTransition,\n    labelTransitionDuration = _ref.labelTransitionDuration,\n    labelTransitionTimingFunction = _ref.labelTransitionTimingFunction,\n    labelAlwaysOn = _ref.labelAlwaysOn,\n    thumbLabel = _ref.thumbLabel,\n    _onFocus = _ref.onFocus,\n    _onBlur = _ref.onBlur,\n    showLabelOnHover = _ref.showLabelOnHover,\n    _ref$children = _ref.children,\n    children = _ref$children === void 0 ? null : _ref$children,\n    disabled = _ref.disabled,\n    unstyled = _ref.unstyled,\n    thumbSize = _ref.thumbSize;\n  var _useStyles = useStyles({\n      color: color,\n      size: size,\n      disabled: disabled,\n      thumbSize: thumbSize\n    }, {\n      classNames: classNames,\n      styles: styles,\n      unstyled: unstyled,\n      name: \"Slider\"\n    }),\n    classes = _useStyles.classes,\n    cx = _useStyles.cx,\n    theme = _useStyles.theme;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    focused = _useState2[0],\n    setFocused = _useState2[1];\n  var isVisible = labelAlwaysOn || dragging || focused || showLabelOnHover;\n  return /* @__PURE__ */React.createElement(Box, {\n    tabIndex: 0,\n    role: \"slider\",\n    \"aria-label\": thumbLabel,\n    \"aria-valuemax\": max,\n    \"aria-valuemin\": min,\n    \"aria-valuenow\": value,\n    ref: ref,\n    className: cx(classes.thumb, _defineProperty({}, classes.dragging, dragging)),\n    onFocus: function onFocus() {\n      setFocused(true);\n      typeof _onFocus === \"function\" && _onFocus();\n    },\n    onBlur: function onBlur() {\n      setFocused(false);\n      typeof _onBlur === \"function\" && _onBlur();\n    },\n    onTouchStart: onMouseDown,\n    onMouseDown: onMouseDown,\n    onClick: function onClick(event) {\n      return event.stopPropagation();\n    },\n    style: _defineProperty({}, theme.dir === \"rtl\" ? \"right\" : \"left\", \"\".concat(position, \"%\"))\n  }, children, /* @__PURE__ */React.createElement(Transition, {\n    mounted: label != null && isVisible,\n    duration: labelTransitionDuration,\n    transition: labelTransition,\n    timingFunction: labelTransitionTimingFunction || theme.transitionTimingFunction\n  }, function (transitionStyles) {\n    return /* @__PURE__ */React.createElement(\"div\", {\n      style: transitionStyles,\n      className: classes.label\n    }, label);\n  }));\n});\nThumb.displayName = \"@mantine/core/SliderThumb\";\nexport { Thumb };","map":{"version":3,"mappings":"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","names":["Thumb","forwardRef","ref","max","min","value","position","label","dragging","onMouseDown","color","classNames","styles","size","labelTransition","labelTransitionDuration","labelTransitionTimingFunction","labelAlwaysOn","thumbLabel","onFocus","onBlur","showLabelOnHover","children","disabled","unstyled","thumbSize","useStyles","name","classes","cx","theme","useState","focused","setFocused","isVisible","React","createElement","Box","tabIndex","role","className","thumb","onTouchStart","onClick","event","stopPropagation","style","dir","Transition","mounted","duration","transition","timingFunction","transitionTimingFunction","transitionStyles","displayName"],"sources":["/workspaces/mantine-react-router-cats/node_modules/@mantine/core/src/Slider/Thumb/Thumb.tsx"],"sourcesContent":["import React, { useState, forwardRef } from 'react';\nimport { DefaultProps, MantineNumberSize, MantineColor, Selectors } from '@mantine/styles';\nimport { Box } from '../../Box';\nimport { Transition, MantineTransition } from '../../Transition';\nimport useStyles from './Thumb.styles';\n\nexport type ThumbStylesNames = Selectors<typeof useStyles>;\n\nexport interface ThumbProps extends DefaultProps<ThumbStylesNames> {\n  max: number;\n  min: number;\n  value: number;\n  position: number;\n  dragging: boolean;\n  color: MantineColor;\n  size: MantineNumberSize;\n  label: React.ReactNode;\n  onMouseDown(event: React.MouseEvent<HTMLDivElement> | React.TouchEvent<HTMLDivElement>): void;\n  labelTransition?: MantineTransition;\n  labelTransitionDuration?: number;\n  labelTransitionTimingFunction?: string;\n  labelAlwaysOn: boolean;\n  thumbLabel: string;\n  onFocus?(): void;\n  onBlur?(): void;\n  showLabelOnHover?: boolean;\n  children?: React.ReactNode;\n  disabled: boolean;\n  thumbSize: number;\n}\n\nexport const Thumb = forwardRef<HTMLDivElement, ThumbProps>(\n  (\n    {\n      max,\n      min,\n      value,\n      position,\n      label,\n      dragging,\n      onMouseDown,\n      color,\n      classNames,\n      styles,\n      size,\n      labelTransition,\n      labelTransitionDuration,\n      labelTransitionTimingFunction,\n      labelAlwaysOn,\n      thumbLabel,\n      onFocus,\n      onBlur,\n      showLabelOnHover,\n      children = null,\n      disabled,\n      unstyled,\n      thumbSize,\n    }: ThumbProps,\n    ref\n  ) => {\n    const { classes, cx, theme } = useStyles(\n      { color, size, disabled, thumbSize },\n      { classNames, styles, unstyled, name: 'Slider' }\n    );\n    const [focused, setFocused] = useState(false);\n    const isVisible = labelAlwaysOn || dragging || focused || showLabelOnHover;\n\n    return (\n      <Box<'div'>\n        tabIndex={0}\n        role=\"slider\"\n        aria-label={thumbLabel}\n        aria-valuemax={max}\n        aria-valuemin={min}\n        aria-valuenow={value}\n        ref={ref}\n        className={cx(classes.thumb, { [classes.dragging]: dragging })}\n        onFocus={() => {\n          setFocused(true);\n          typeof onFocus === 'function' && onFocus();\n        }}\n        onBlur={() => {\n          setFocused(false);\n          typeof onBlur === 'function' && onBlur();\n        }}\n        onTouchStart={onMouseDown}\n        onMouseDown={onMouseDown}\n        onClick={(event) => event.stopPropagation()}\n        style={{ [theme.dir === 'rtl' ? 'right' : 'left']: `${position}%` }}\n      >\n        {children}\n        <Transition\n          mounted={label != null && isVisible}\n          duration={labelTransitionDuration}\n          transition={labelTransition}\n          timingFunction={labelTransitionTimingFunction || theme.transitionTimingFunction}\n        >\n          {(transitionStyles) => (\n            <div style={transitionStyles} className={classes.label}>\n              {label}\n            </div>\n          )}\n        </Transition>\n      </Box>\n    );\n  }\n);\n\nThumb.displayName = '@mantine/core/SliderThumb';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}