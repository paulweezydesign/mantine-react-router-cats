{"ast":null,"code":"import _slicedToArray from \"/workspaces/mantine-react-router-cats/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React from 'react';\nimport { getSafeId } from '@mantine/utils';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport { TabsContextProvider } from './Tabs.context.js';\nimport { TABS_ERRORS } from './Tabs.errors.js';\nfunction TabsProvider(_ref) {\n  var defaultValue = _ref.defaultValue,\n    value = _ref.value,\n    onTabChange = _ref.onTabChange,\n    orientation = _ref.orientation,\n    children = _ref.children,\n    loop = _ref.loop,\n    id = _ref.id,\n    activateTabWithKeyboard = _ref.activateTabWithKeyboard,\n    allowTabDeactivation = _ref.allowTabDeactivation,\n    variant = _ref.variant,\n    color = _ref.color,\n    radius = _ref.radius,\n    inverted = _ref.inverted,\n    placement = _ref.placement,\n    _ref$keepMounted = _ref.keepMounted,\n    keepMounted = _ref$keepMounted === void 0 ? true : _ref$keepMounted,\n    classNames = _ref.classNames,\n    styles = _ref.styles,\n    unstyled = _ref.unstyled;\n  var uid = useId(id);\n  var _useUncontrolled = useUncontrolled({\n      value: value,\n      defaultValue: defaultValue,\n      finalValue: null,\n      onChange: onTabChange\n    }),\n    _useUncontrolled2 = _slicedToArray(_useUncontrolled, 2),\n    _value = _useUncontrolled2[0],\n    onChange = _useUncontrolled2[1];\n  return /* @__PURE__ */React.createElement(TabsContextProvider, {\n    value: {\n      placement: placement,\n      value: _value,\n      orientation: orientation,\n      id: uid,\n      loop: loop,\n      activateTabWithKeyboard: activateTabWithKeyboard,\n      getTabId: getSafeId(\"\".concat(uid, \"-tab\"), TABS_ERRORS.value),\n      getPanelId: getSafeId(\"\".concat(uid, \"-panel\"), TABS_ERRORS.value),\n      onTabChange: onChange,\n      allowTabDeactivation: allowTabDeactivation,\n      variant: variant,\n      color: color,\n      radius: radius,\n      inverted: inverted,\n      keepMounted: keepMounted,\n      classNames: classNames,\n      styles: styles,\n      unstyled: unstyled\n    }\n  }, children);\n}\nTabsProvider.displayName = \"@mantine/core/TabsProvider\";\nexport { TabsProvider };","map":{"version":3,"mappings":";;;;;;AAKO,SAASA,YAAY,OAmBzB;EAAA,IAlBDC,YAAY,QAAZA,YAAY;IACZC,KAAK,QAALA,KAAK;IACLC,WAAW,QAAXA,WAAW;IACXC,WAAW,QAAXA,WAAW;IACXC,QAAQ,QAARA,QAAQ;IACRC,IAAI,QAAJA,IAAI;IACJC,EAAE,QAAFA,EAAE;IACFC,uBAAuB,QAAvBA,uBAAuB;IACvBC,oBAAoB,QAApBA,oBAAoB;IACpBC,OAAO,QAAPA,OAAO;IACPC,KAAK,QAALA,KAAK;IACLC,MAAM,QAANA,MAAM;IACNC,QAAQ,QAARA,QAAQ;IACRC,SAAS,QAATA,SAAS;IAAA,wBACTC,WAAW;IAAXA,WAAW,iCAAG,IAAI;IAClBC,UAAU,QAAVA,UAAU;IACVC,MAAM,QAANA,MAAM;IACNC,QAAQ,QAARA,QAAQ;EAER,IAAMC,GAAG,GAAGC,KAAK,CAACb,EAAE,CAAC;EACrB,uBAA2Bc,eAAe,CAAC;MACzCnB,KAAK,EAALA,KAAK;MACLD,YAAY,EAAZA,YAAY;MACZqB,UAAU,EAAE,IAAI;MAChBC,QAAQ,EAAEpB;IACd,CAAG,CAAC;IAAA;IALKqB,MAAM;IAAED,QAAQ;EAMvB,sBAAuBE,KAAK,CAACC,aAAa,CAACC,mBAAmB,EAAE;IAC9DzB,KAAK,EAAE;MACLY,SAAS,EAATA,SAAS;MACTZ,KAAK,EAAEsB,MAAM;MACbpB,WAAW,EAAXA,WAAW;MACXG,EAAE,EAAEY,GAAG;MACPb,IAAI,EAAJA,IAAI;MACJE,uBAAuB,EAAvBA,uBAAuB;MACvBoB,QAAQ,EAAEC,SAAS,WAAIV,GAAG,WAAQW,WAAW,CAAC5B,KAAK,CAAC;MACpD6B,UAAU,EAAEF,SAAS,WAAIV,GAAG,aAAUW,WAAW,CAAC5B,KAAK,CAAC;MACxDC,WAAW,EAAEoB,QAAQ;MACrBd,oBAAoB,EAApBA,oBAAoB;MACpBC,OAAO,EAAPA,OAAO;MACPC,KAAK,EAALA,KAAK;MACLC,MAAM,EAANA,MAAM;MACNC,QAAQ,EAARA,QAAQ;MACRE,WAAW,EAAXA,WAAW;MACXC,UAAU,EAAVA,UAAU;MACVC,MAAM,EAANA,MAAM;MACNC,QAAQ,EAARA;IACN;EACA,CAAG,EAAEb,QAAQ,CAAC;AACd;AACAL,YAAY,CAACgC,WAAW,GAAG,4BAA4B","names":["TabsProvider","defaultValue","value","onTabChange","orientation","children","loop","id","activateTabWithKeyboard","allowTabDeactivation","variant","color","radius","inverted","placement","keepMounted","classNames","styles","unstyled","uid","useId","useUncontrolled","finalValue","onChange","_value","React","createElement","TabsContextProvider","getTabId","getSafeId","TABS_ERRORS","getPanelId","displayName"],"sources":["/workspaces/mantine-react-router-cats/node_modules/@mantine/core/src/Tabs/TabsProvider.tsx"],"sourcesContent":["import React from 'react';\nimport { getSafeId } from '@mantine/utils';\nimport { useUncontrolled, useId } from '@mantine/hooks';\nimport { ClassNames, MantineColor, MantineNumberSize, Styles } from '@mantine/styles';\nimport { TabsContextProvider } from './Tabs.context';\nimport { TABS_ERRORS } from './Tabs.errors';\nimport {\n  TabsValue,\n  TabsOrientation,\n  TabsVariant,\n  TabsPlacement,\n  TabsStylesParams,\n} from './Tabs.types';\nimport type { TabsStylesNames } from './Tabs';\n\nexport interface TabsProviderProps {\n  /** Default value for uncontrolled component */\n  defaultValue?: TabsValue;\n\n  /** Value for controlled component */\n  value?: TabsValue;\n\n  /** Callback for controlled component */\n  onTabChange?(value: TabsValue): void;\n\n  /** Tabs orientation, vertical or horizontal */\n  orientation?: TabsOrientation;\n\n  /** Tabs.List placement relative to Tabs.Panel, applicable only for orientation=\"vertical\", left by default */\n  placement?: TabsPlacement;\n\n  /** Base id, used to generate ids that connect labels with controls, by default generated randomly */\n  id?: string;\n\n  /** Determines whether arrow key presses should loop though items (first to last and last to first) */\n  loop?: boolean;\n\n  /** Determines whether tab should be activated with arrow key press, defaults to true */\n  activateTabWithKeyboard?: boolean;\n\n  /** Determines whether tab can be deactivated, defaults to false */\n  allowTabDeactivation?: boolean;\n\n  /** Tabs content */\n  children: React.ReactNode;\n\n  /** Controls component visuals */\n  variant?: TabsVariant;\n\n  /** Key of theme.colors */\n  color?: MantineColor;\n\n  /** Tabs border-radius from theme.radius or number ti set value from theme, defaults to theme.defaultRadius */\n  radius?: MantineNumberSize;\n\n  /** Determines whether tabs should have inverted styles */\n  inverted?: boolean;\n\n  /** If set to false, Tabs.Panel content will not stay mounted when tab is not active */\n  keepMounted?: boolean;\n}\n\ninterface _TabsProviderProps extends TabsProviderProps {\n  classNames?: ClassNames<TabsStylesNames>;\n  styles?: Styles<TabsStylesNames, TabsStylesParams>;\n  unstyled?: boolean;\n}\n\nexport function TabsProvider({\n  defaultValue,\n  value,\n  onTabChange,\n  orientation,\n  children,\n  loop,\n  id,\n  activateTabWithKeyboard,\n  allowTabDeactivation,\n  variant,\n  color,\n  radius,\n  inverted,\n  placement,\n  keepMounted = true,\n  classNames,\n  styles,\n  unstyled,\n}: _TabsProviderProps) {\n  const uid = useId(id);\n\n  const [_value, onChange] = useUncontrolled<TabsValue>({\n    value,\n    defaultValue,\n    finalValue: null,\n    onChange: onTabChange,\n  });\n\n  return (\n    <TabsContextProvider\n      value={{\n        placement,\n        value: _value,\n        orientation,\n        id: uid,\n        loop,\n        activateTabWithKeyboard,\n        getTabId: getSafeId(`${uid}-tab`, TABS_ERRORS.value),\n        getPanelId: getSafeId(`${uid}-panel`, TABS_ERRORS.value),\n        onTabChange: onChange,\n        allowTabDeactivation,\n        variant,\n        color,\n        radius,\n        inverted,\n        keepMounted,\n        classNames,\n        styles,\n        unstyled,\n      }}\n    >\n      {children}\n    </TabsContextProvider>\n  );\n}\n\nTabsProvider.displayName = '@mantine/core/TabsProvider';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}