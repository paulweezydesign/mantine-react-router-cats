{"ast":null,"code":"import React from 'react';\nimport { getTransitionStyles } from './get-transition-styles/get-transition-styles.js';\nimport { useTransition } from './use-transition.js';\nfunction GroupedTransition(_ref) {\n  var transitions = _ref.transitions,\n    _ref$duration = _ref.duration,\n    duration = _ref$duration === void 0 ? 250 : _ref$duration,\n    _ref$exitDuration = _ref.exitDuration,\n    exitDuration = _ref$exitDuration === void 0 ? duration : _ref$exitDuration,\n    mounted = _ref.mounted,\n    children = _ref.children,\n    timingFunction = _ref.timingFunction,\n    onExit = _ref.onExit,\n    onEntered = _ref.onEntered,\n    onEnter = _ref.onEnter,\n    onExited = _ref.onExited;\n  var _useTransition = useTransition({\n      mounted: mounted,\n      duration: duration,\n      exitDuration: exitDuration,\n      timingFunction: timingFunction,\n      onExit: onExit,\n      onEntered: onEntered,\n      onEnter: onEnter,\n      onExited: onExited\n    }),\n    transitionDuration = _useTransition.transitionDuration,\n    transitionStatus = _useTransition.transitionStatus,\n    transitionTimingFunction = _useTransition.transitionTimingFunction;\n  if (transitionDuration === 0) {\n    return mounted ? /* @__PURE__ */React.createElement(React.Fragment, null, children({})) : null;\n  }\n  if (transitionStatus === \"exited\") {\n    return null;\n  }\n  var transitionsStyles = Object.keys(transitions).reduce(function (acc, transition) {\n    acc[transition] = getTransitionStyles({\n      duration: transitions[transition].duration,\n      transition: transitions[transition].transition,\n      timingFunction: transitions[transition].timingFunction || transitionTimingFunction,\n      state: transitionStatus\n    });\n    return acc;\n  }, {});\n  return /* @__PURE__ */React.createElement(React.Fragment, null, children(transitionsStyles));\n}\nGroupedTransition.displayName = \"@mantine/core/GroupedTransition\";\nexport { GroupedTransition };","map":{"version":3,"mappings":";;;AAGO,SAASA,iBAAiB,OAW9B;EAAA,IAVDC,WAAW,QAAXA,WAAW;IAAA,qBACXC,QAAQ;IAARA,QAAQ,8BAAG,GAAG;IAAA,yBACdC,YAAY;IAAZA,YAAY,kCAAGD,QAAQ;IACvBE,OAAO,QAAPA,OAAO;IACPC,QAAQ,QAARA,QAAQ;IACRC,cAAc,QAAdA,cAAc;IACdC,MAAM,QAANA,MAAM;IACNC,SAAS,QAATA,SAAS;IACTC,OAAO,QAAPA,OAAO;IACPC,QAAQ,QAARA,QAAQ;EAER,qBAA2EC,aAAa,CAAC;MACvFP,OAAO,EAAPA,OAAO;MACPF,QAAQ,EAARA,QAAQ;MACRC,YAAY,EAAZA,YAAY;MACZG,cAAc,EAAdA,cAAc;MACdC,MAAM,EAANA,MAAM;MACNC,SAAS,EAATA,SAAS;MACTC,OAAO,EAAPA,OAAO;MACPC,QAAQ,EAARA;IACJ,CAAG,CAAC;IATME,kBAAkB,kBAAlBA,kBAAkB;IAAEC,gBAAgB,kBAAhBA,gBAAgB;IAAEC,wBAAwB,kBAAxBA,wBAAwB;EAUtE,IAAIF,kBAAkB,KAAK,CAAC,EAAE;IAC5B,OAAOR,OAAO,kBAAmBW,KAAK,CAACC,aAAa,CAACD,KAAK,CAACE,QAAQ,EAAE,IAAI,EAAEZ,QAAQ,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI;EACnG;EACE,IAAIQ,gBAAgB,KAAK,QAAQ,EAAE;IACjC,OAAO,IAAI;EACf;EACE,IAAMK,iBAAiB,GAAGC,MAAM,CAACC,IAAI,CAACnB,WAAW,CAAC,CAACoB,MAAM,CAAC,UAACC,GAAG,EAAEC,UAAU,EAAK;IAC7ED,GAAG,CAACC,UAAU,CAAC,GAAGC,mBAAmB,CAAC;MACpCtB,QAAQ,EAAED,WAAW,CAACsB,UAAU,CAAC,CAACrB,QAAQ;MAC1CqB,UAAU,EAAEtB,WAAW,CAACsB,UAAU,CAAC,CAACA,UAAU;MAC9CjB,cAAc,EAAEL,WAAW,CAACsB,UAAU,CAAC,CAACjB,cAAc,IAAIQ,wBAAwB;MAClFW,KAAK,EAAEZ;IACb,CAAK,CAAC;IACF,OAAOS,GAAG;EACd,CAAG,EAAE,EAAE,CAAC;EACN,sBAAuBP,KAAK,CAACC,aAAa,CAACD,KAAK,CAACE,QAAQ,EAAE,IAAI,EAAEZ,QAAQ,CAACa,iBAAiB,CAAC,CAAC;AAC/F;AACAlB,iBAAiB,CAAC0B,WAAW,GAAG,iCAAiC","names":["GroupedTransition","transitions","duration","exitDuration","mounted","children","timingFunction","onExit","onEntered","onEnter","onExited","useTransition","transitionDuration","transitionStatus","transitionTimingFunction","React","createElement","Fragment","transitionsStyles","Object","keys","reduce","acc","transition","getTransitionStyles","state","displayName"],"sources":["/workspaces/mantine-react-router-cats/node_modules/@mantine/core/src/Transition/GroupedTransition.tsx"],"sourcesContent":["import React from 'react';\nimport { getTransitionStyles } from './get-transition-styles/get-transition-styles';\nimport { useTransition } from './use-transition';\nimport { MantineTransition } from './transitions';\n\ninterface GroupedTransitionItem {\n  duration: number;\n  timingFunction?: React.CSSProperties['transitionTimingFunction'];\n  transition: MantineTransition;\n}\n\nexport interface GroupedTransitionProps {\n  /** Transitions group */\n  transitions: Record<string, GroupedTransitionItem>;\n\n  /** Render function with transition group styles argument */\n  children(styles: Record<string, React.CSSProperties>): React.ReactElement<any, any>;\n\n  /** Enter transition duration in ms */\n  duration?: number;\n\n  /** Exit transition duration in ms */\n  exitDuration?: number;\n\n  /** Transition timing function, defaults to theme.transitionTimingFunction */\n  timingFunction?: string;\n\n  /** When true, component will be mounted */\n  mounted: boolean;\n\n  /** Calls when exit transition ends */\n  onExited?: () => void;\n\n  /** Calls when exit transition starts */\n  onExit?: () => void;\n\n  /** Calls when enter transition starts */\n  onEnter?: () => void;\n\n  /** Calls when enter transition ends */\n  onEntered?: () => void;\n}\n\nexport function GroupedTransition({\n  transitions,\n  duration = 250,\n  exitDuration = duration,\n  mounted,\n  children,\n  timingFunction,\n  onExit,\n  onEntered,\n  onEnter,\n  onExited,\n}: GroupedTransitionProps) {\n  const { transitionDuration, transitionStatus, transitionTimingFunction } = useTransition({\n    mounted,\n    duration,\n    exitDuration,\n    timingFunction,\n    onExit,\n    onEntered,\n    onEnter,\n    onExited,\n  });\n\n  if (transitionDuration === 0) {\n    return mounted ? <>{children({})}</> : null;\n  }\n\n  if (transitionStatus === 'exited') {\n    return null;\n  }\n\n  const transitionsStyles = Object.keys(transitions).reduce((acc, transition) => {\n    acc[transition] = getTransitionStyles({\n      duration: transitions[transition].duration,\n      transition: transitions[transition].transition,\n      timingFunction: transitions[transition].timingFunction || transitionTimingFunction,\n      state: transitionStatus,\n    });\n\n    return acc;\n  }, {});\n\n  return <>{children(transitionsStyles)}</>;\n}\n\nGroupedTransition.displayName = '@mantine/core/GroupedTransition';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}