{"ast":null,"code":"import _toConsumableArray from \"/workspaces/mantine-react-router-cats/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/workspaces/mantine-react-router-cats/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useUncontrolled, useDidUpdate } from '@mantine/hooks';\nimport { useFloating, size, offset, shift, limitShift, flip, inline, arrow } from '@floating-ui/react-dom-interactions';\nimport { useFloatingAutoUpdate } from '../Floating/use-floating-auto-update.js';\nfunction getPopoverMiddlewares(options) {\n  var middlewares = [offset(options.offset)];\n  if (options.middlewares.shift) {\n    middlewares.push(shift({\n      limiter: limitShift()\n    }));\n  }\n  if (options.middlewares.flip) {\n    middlewares.push(flip());\n  }\n  if (options.middlewares.inline) {\n    middlewares.push(inline());\n  }\n  middlewares.push(arrow({\n    element: options.arrowRef,\n    padding: options.arrowOffset\n  }));\n  return middlewares;\n}\nfunction usePopover(options) {\n  var _useUncontrolled = useUncontrolled({\n      value: options.opened,\n      defaultValue: options.defaultOpened,\n      finalValue: false,\n      onChange: options.onChange\n    }),\n    _useUncontrolled2 = _slicedToArray(_useUncontrolled, 2),\n    _opened = _useUncontrolled2[0],\n    setOpened = _useUncontrolled2[1];\n  var onClose = function onClose() {\n    var _a;\n    (_a = options.onClose) == null ? void 0 : _a.call(options);\n    setOpened(false);\n  };\n  var onToggle = function onToggle() {\n    var _a, _b;\n    if (_opened) {\n      (_a = options.onClose) == null ? void 0 : _a.call(options);\n      setOpened(false);\n    } else {\n      (_b = options.onOpen) == null ? void 0 : _b.call(options);\n      setOpened(true);\n    }\n  };\n  var floating = useFloating({\n    placement: options.position,\n    middleware: [].concat(_toConsumableArray(getPopoverMiddlewares(options)), _toConsumableArray(options.width === \"target\" ? [size({\n      apply: function apply(_ref) {\n        var rects = _ref.rects;\n        var _a, _b;\n        Object.assign((_b = (_a = floating.refs.floating.current) == null ? void 0 : _a.style) != null ? _b : {}, {\n          width: \"\".concat(rects.reference.width, \"px\")\n        });\n      }\n    })] : []))\n  });\n  useFloatingAutoUpdate({\n    opened: options.opened,\n    positionDependencies: options.positionDependencies,\n    floating: floating\n  });\n  useDidUpdate(function () {\n    var _a;\n    (_a = options.onPositionChange) == null ? void 0 : _a.call(options, floating.placement);\n  }, [floating.placement]);\n  return {\n    floating: floating,\n    controlled: typeof options.opened === \"boolean\",\n    opened: _opened,\n    onClose: onClose,\n    onToggle: onToggle\n  };\n}\nexport { usePopover };","map":{"version":3,"mappings":";;;;;AAYA,SAASA,qBAAqB,CAACC,OAAO,EAAE;EACtC,IAAMC,WAAW,GAAG,CAACC,MAAM,CAACF,OAAO,CAACE,MAAM,CAAC,CAAC;EAC5C,IAAIF,OAAO,CAACC,WAAW,CAACE,KAAK,EAAE;IAC7BF,WAAW,CAACG,IAAI,CAACD,KAAK,CAAC;MAAEE,OAAO,EAAEC,UAAU;IAAE,CAAE,CAAC,CAAC;EACtD;EACE,IAAIN,OAAO,CAACC,WAAW,CAACM,IAAI,EAAE;IAC5BN,WAAW,CAACG,IAAI,CAACG,IAAI,EAAE,CAAC;EAC5B;EACE,IAAIP,OAAO,CAACC,WAAW,CAACO,MAAM,EAAE;IAC9BP,WAAW,CAACG,IAAI,CAACI,MAAM,EAAE,CAAC;EAC9B;EACEP,WAAW,CAACG,IAAI,CAACK,KAAK,CAAC;IAAEC,OAAO,EAAEV,OAAO,CAACW,QAAQ;IAAEC,OAAO,EAAEZ,OAAO,CAACa;EAAW,CAAE,CAAC,CAAC;EACpF,OAAOZ,WAAW;AACpB;AACO,SAASa,UAAU,CAACd,OAAO,EAAE;EAClC,uBAA6Be,eAAe,CAAC;MAC3CC,KAAK,EAAEhB,OAAO,CAACiB,MAAM;MACrBC,YAAY,EAAElB,OAAO,CAACmB,aAAa;MACnCC,UAAU,EAAE,KAAK;MACjBC,QAAQ,EAAErB,OAAO,CAACqB;IACtB,CAAG,CAAC;IAAA;IALKC,OAAO;IAAEC,SAAS;EAMzB,IAAMC,OAAO,GAAG,SAAVA,OAAO,GAAS;IACpB,IAAIC,EAAE;IACN,CAACA,EAAE,GAAGzB,OAAO,CAACwB,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGC,EAAE,CAACC,IAAI,CAAC1B,OAAO,CAAC;IAC1DuB,SAAS,CAAC,KAAK,CAAC;EACpB,CAAG;EACD,IAAMI,QAAQ,GAAG,SAAXA,QAAQ,GAAS;IACrB,IAAIF,EAAE,EAAEG,EAAE;IACV,IAAIN,OAAO,EAAE;MACX,CAACG,EAAE,GAAGzB,OAAO,CAACwB,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGC,EAAE,CAACC,IAAI,CAAC1B,OAAO,CAAC;MAC1DuB,SAAS,CAAC,KAAK,CAAC;IACtB,CAAK,MAAM;MACL,CAACK,EAAE,GAAG5B,OAAO,CAAC6B,MAAM,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGD,EAAE,CAACF,IAAI,CAAC1B,OAAO,CAAC;MACzDuB,SAAS,CAAC,IAAI,CAAC;IACrB;EACA,CAAG;EACD,IAAMO,QAAQ,GAAGC,WAAW,CAAC;IAC3BC,SAAS,EAAEhC,OAAO,CAACiC,QAAQ;IAC3BC,UAAU,+BACLnC,qBAAqB,CAACC,OAAO,CAAC,sBAC9BA,OAAO,CAACmC,KAAK,KAAK,QAAQ,GAAG,CAC9BC,IAAI,CAAC;MACHC,KAAK,uBAAY;QAAA,IAATC,KAAK,QAALA,KAAK;QACX,IAAIb,EAAE,EAAEG,EAAE;QACVW,MAAM,CAACC,MAAM,CAAC,CAACZ,EAAE,GAAG,CAACH,EAAE,GAAGK,QAAQ,CAACW,IAAI,CAACX,QAAQ,CAACY,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGjB,EAAE,CAACkB,KAAK,KAAK,IAAI,GAAGf,EAAE,GAAG,EAAE,EAAE;UACxGO,KAAK,YAAKG,KAAK,CAACM,SAAS,CAACT,KAAK;QAC7C,CAAa,CAAC;MACd;IACA,CAAS,CAAC,CACH,GAAG,EAAE;EAEZ,CAAG,CAAC;EACFU,qBAAqB,CAAC;IACpB5B,MAAM,EAAEjB,OAAO,CAACiB,MAAM;IACtB6B,oBAAoB,EAAE9C,OAAO,CAAC8C,oBAAoB;IAClDhB,QAAQ,EAARA;EACJ,CAAG,CAAC;EACFiB,YAAY,CAAC,YAAM;IACjB,IAAItB,EAAE;IACN,CAACA,EAAE,GAAGzB,OAAO,CAACgD,gBAAgB,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGvB,EAAE,CAACC,IAAI,CAAC1B,OAAO,EAAE8B,QAAQ,CAACE,SAAS,CAAC;EAC3F,CAAG,EAAE,CAACF,QAAQ,CAACE,SAAS,CAAC,CAAC;EACxB,OAAO;IACLF,QAAQ,EAARA,QAAQ;IACRmB,UAAU,EAAE,OAAOjD,OAAO,CAACiB,MAAM,KAAK,SAAS;IAC/CA,MAAM,EAAEK,OAAO;IACfE,OAAO,EAAPA,OAAO;IACPG,QAAQ,EAARA;EACJ,CAAG;AACH","names":["getPopoverMiddlewares","options","middlewares","offset","shift","push","limiter","limitShift","flip","inline","arrow","element","arrowRef","padding","arrowOffset","usePopover","useUncontrolled","value","opened","defaultValue","defaultOpened","finalValue","onChange","_opened","setOpened","onClose","_a","call","onToggle","_b","onOpen","floating","useFloating","placement","position","middleware","width","size","apply","rects","Object","assign","refs","current","style","reference","useFloatingAutoUpdate","positionDependencies","useDidUpdate","onPositionChange","controlled"],"sources":["/workspaces/mantine-react-router-cats/node_modules/@mantine/core/src/Popover/use-popover.ts"],"sourcesContent":["import { useDidUpdate, useUncontrolled } from '@mantine/hooks';\nimport {\n  useFloating,\n  shift,\n  flip,\n  arrow,\n  offset,\n  size,\n  Middleware,\n  inline,\n  limitShift,\n} from '@floating-ui/react-dom-interactions';\nimport { FloatingPosition, useFloatingAutoUpdate } from '../Floating';\nimport { PopoverWidth, PopoverMiddlewares } from './Popover.types';\n\ninterface UsePopoverOptions {\n  offset: number;\n  position: FloatingPosition;\n  positionDependencies: any[];\n  onPositionChange?(position: FloatingPosition): void;\n  opened: boolean;\n  defaultOpened: boolean;\n  onChange(opened: boolean): void;\n  onClose?(): void;\n  onOpen?(): void;\n  width: PopoverWidth;\n  middlewares: PopoverMiddlewares;\n  arrowRef: React.RefObject<HTMLDivElement>;\n  arrowOffset: number;\n}\n\nfunction getPopoverMiddlewares(options: UsePopoverOptions) {\n  const middlewares: Middleware[] = [offset(options.offset)];\n\n  if (options.middlewares.shift) {\n    middlewares.push(shift({ limiter: limitShift() }));\n  }\n\n  if (options.middlewares.flip) {\n    middlewares.push(flip());\n  }\n\n  if (options.middlewares.inline) {\n    middlewares.push(inline());\n  }\n\n  middlewares.push(arrow({ element: options.arrowRef, padding: options.arrowOffset }));\n\n  return middlewares;\n}\n\nexport function usePopover(options: UsePopoverOptions) {\n  const [_opened, setOpened] = useUncontrolled({\n    value: options.opened,\n    defaultValue: options.defaultOpened,\n    finalValue: false,\n    onChange: options.onChange,\n  });\n\n  const onClose = () => {\n    options.onClose?.();\n    setOpened(false);\n  };\n\n  const onToggle = () => {\n    if (_opened) {\n      options.onClose?.();\n      setOpened(false);\n    } else {\n      options.onOpen?.();\n      setOpened(true);\n    }\n  };\n\n  const floating = useFloating({\n    placement: options.position,\n    middleware: [\n      ...getPopoverMiddlewares(options),\n      ...(options.width === 'target'\n        ? [\n            size({\n              apply({ rects }) {\n                Object.assign(floating.refs.floating.current?.style ?? {}, {\n                  width: `${rects.reference.width}px`,\n                });\n              },\n            }),\n          ]\n        : []),\n    ],\n  });\n\n  useFloatingAutoUpdate({\n    opened: options.opened,\n    positionDependencies: options.positionDependencies,\n    floating,\n  });\n\n  useDidUpdate(() => {\n    options.onPositionChange?.(floating.placement);\n  }, [floating.placement]);\n\n  return {\n    floating,\n    controlled: typeof options.opened === 'boolean',\n    opened: _opened,\n    onClose,\n    onToggle,\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}