{"ast":null,"code":"import _slicedToArray from \"/workspaces/mantine-react-router-cats/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { useState } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect.js';\nvar randomId = function randomId() {\n  return \"mantine-\".concat(Math.random().toString(36).slice(2, 11));\n};\nvar useReactId = React[\"useId\".toString()] || function () {\n  return void 0;\n};\nfunction useClientId() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    uuid = _useState2[0],\n    setUuid = _useState2[1];\n  useIsomorphicEffect(function () {\n    setUuid(randomId());\n  }, []);\n  return uuid;\n}\nfunction getReactId() {\n  var id = useReactId();\n  return id ? \"mantine-\".concat(id.replace(/:/g, \"\")) : \"\";\n}\nfunction useId(staticId) {\n  return typeof staticId === \"string\" ? staticId : getReactId() || useClientId();\n}\nexport { useId };","map":{"version":3,"mappings":";;;AAEA,IAAMA,QAAQ,GAAG,SAAXA,QAAQ;EAAA,yBAAoBC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;AAAA,CAAE;AAC3E,IAAMC,UAAU,GAAGC,KAAK,CAAC,OAAO,CAACH,QAAQ,EAAE,CAAC,IAAK;EAAA,OAAM,KAAK,CAAC;AAAA,CAAC;AAC9D,SAASI,WAAW,GAAG;EACrB,gBAAwBC,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7BC,IAAI;IAAEC,OAAO;EACpBC,mBAAmB,CAAC,YAAM;IACxBD,OAAO,CAACV,QAAQ,EAAE,CAAC;EACvB,CAAG,EAAE,EAAE,CAAC;EACN,OAAOS,IAAI;AACb;AACA,SAASG,UAAU,GAAG;EACpB,IAAMC,EAAE,GAAGR,UAAU,EAAE;EACvB,OAAOQ,EAAE,qBAAcA,EAAE,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,IAAK,EAAE;AACpD;AACO,SAASC,KAAK,CAACC,QAAQ,EAAE;EAC9B,OAAO,OAAOA,QAAQ,KAAK,QAAQ,GAAGA,QAAQ,GAAGJ,UAAU,EAAE,IAAIL,WAAW,EAAE;AAChF","names":["randomId","Math","random","toString","slice","useReactId","React","useClientId","useState","uuid","setUuid","useIsomorphicEffect","getReactId","id","replace","useId","staticId"],"sources":["/workspaces/mantine-react-router-cats/node_modules/@mantine/hooks/src/use-id/use-id.ts"],"sourcesContent":["import React, { useState } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect';\n\nconst randomId = () => `mantine-${Math.random().toString(36).slice(2, 11)}`;\n\nconst useReactId: () => string | undefined =\n  (React as any)['useId'.toString()] || (() => undefined);\n\nfunction useClientId() {\n  const [uuid, setUuid] = useState('');\n\n  useIsomorphicEffect(() => {\n    setUuid(randomId());\n  }, []);\n\n  return uuid;\n}\n\nfunction getReactId() {\n  const id = useReactId();\n  return id ? `mantine-${id.replace(/:/g, '')}` : '';\n}\n\nexport function useId(staticId?: string) {\n  return typeof staticId === 'string' ? staticId : getReactId() || useClientId();\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}