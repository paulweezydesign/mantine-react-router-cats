{"ast":null,"code":"import { useMantineTheme, useCss } from '@mantine/styles';\nimport { getSystemStyles } from '../style-system-props/get-system-styles/get-system-styles.js';\nfunction extractSx(sx, theme) {\n  return typeof sx === \"function\" ? sx(theme) : sx;\n}\nfunction useSx(sx, systemProps, className) {\n  var theme = useMantineTheme();\n  var _useCss = useCss(),\n    css = _useCss.css,\n    cx = _useCss.cx;\n  if (Array.isArray(sx)) {\n    return cx(className, css(getSystemStyles(systemProps, theme)), sx.map(function (partial) {\n      return css(extractSx(partial, theme));\n    }));\n  }\n  return cx(className, css(extractSx(sx, theme)), css(getSystemStyles(systemProps, theme)));\n}\nexport { useSx };","map":{"version":3,"mappings":";;AAKA,SAASA,SAAS,CAACC,EAAE,EAAEC,KAAK,EAAE;EAC5B,OAAO,OAAOD,EAAE,KAAK,UAAU,GAAGA,EAAE,CAACC,KAAK,CAAC,GAAGD,EAAE;AAClD;AACO,SAASE,KAAK,CAACF,EAAE,EAAEG,WAAW,EAAEC,SAAS,EAAE;EAChD,IAAMH,KAAK,GAAGI,eAAe,EAAE;EAC/B,cAAoBC,MAAM,EAAE;IAApBC,GAAG,WAAHA,GAAG;IAAEC,EAAE,WAAFA,EAAE;EACf,IAAIC,KAAK,CAACC,OAAO,CAACV,EAAE,CAAC,EAAE;IACrB,OAAOQ,EAAE,CAACJ,SAAS,EAAEG,GAAG,CAACI,eAAe,CAACR,WAAW,EAAEF,KAAK,CAAC,CAAC,EAAED,EAAE,CAACY,GAAG,CAAC,UAACC,OAAO;MAAA,OAAKN,GAAG,CAACR,SAAS,CAACc,OAAO,EAAEZ,KAAK,CAAC,CAAC;IAAA,EAAC,CAAC;EACvH;EACE,OAAOO,EAAE,CAACJ,SAAS,EAAEG,GAAG,CAACR,SAAS,CAACC,EAAE,EAAEC,KAAK,CAAC,CAAC,EAAEM,GAAG,CAACI,eAAe,CAACR,WAAW,EAAEF,KAAK,CAAC,CAAC,CAAC;AAC3F","names":["extractSx","sx","theme","useSx","systemProps","className","useMantineTheme","useCss","css","cx","Array","isArray","getSystemStyles","map","partial"],"sources":["/workspaces/mantine-react-router-cats/node_modules/@mantine/core/src/Box/use-sx/use-sx.ts"],"sourcesContent":["import {\n  MantineStyleSystemProps,\n  MantineTheme,\n  Sx,\n  useCss,\n  useMantineTheme,\n} from '@mantine/styles';\nimport { getSystemStyles } from '../style-system-props/get-system-styles/get-system-styles';\n\nfunction extractSx(sx: Sx, theme: MantineTheme) {\n  return typeof sx === 'function' ? sx(theme) : sx;\n}\n\nexport function useSx(sx: Sx | Sx[], systemProps: MantineStyleSystemProps, className: string) {\n  const theme = useMantineTheme();\n  const { css, cx } = useCss();\n\n  if (Array.isArray(sx)) {\n    return cx(\n      className,\n      css(getSystemStyles(systemProps, theme)),\n      sx.map((partial) => css(extractSx(partial, theme)))\n    );\n  }\n\n  return cx(className, css(extractSx(sx, theme)), css(getSystemStyles(systemProps, theme)));\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}