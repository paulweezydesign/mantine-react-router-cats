{"ast":null,"code":"import _toConsumableArray from \"/workspaces/mantine-react-router-cats/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/workspaces/mantine-react-router-cats/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState, useCallback } from 'react';\nimport { useDelayGroupContext, useFloating, offset, shift, flip, arrow, inline, useInteractions, useHover, useFocus, useRole, useDismiss, useDelayGroup } from '@floating-ui/react-dom-interactions';\nimport { useId, useDidUpdate } from '@mantine/hooks';\nimport { useTooltipGroupContext } from './TooltipGroup/TooltipGroup.context.js';\nimport { useFloatingAutoUpdate } from '../Floating/use-floating-auto-update.js';\nfunction useTooltip(settings) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    uncontrolledOpened = _useState2[0],\n    setUncontrolledOpened = _useState2[1];\n  var controlled = typeof settings.opened === \"boolean\";\n  var opened = controlled ? settings.opened : uncontrolledOpened;\n  var withinGroup = useTooltipGroupContext();\n  var uid = useId();\n  var _useDelayGroupContext = useDelayGroupContext(),\n    groupDelay = _useDelayGroupContext.delay,\n    currentId = _useDelayGroupContext.currentId,\n    setCurrentId = _useDelayGroupContext.setCurrentId;\n  var onChange = useCallback(function (_opened) {\n    setUncontrolledOpened(_opened);\n    if (_opened) {\n      setCurrentId(uid);\n    }\n  }, [setCurrentId, uid]);\n  var _useFloating = useFloating({\n      placement: settings.position,\n      open: opened,\n      onOpenChange: onChange,\n      middleware: [offset(settings.offset), shift({\n        padding: 8\n      }), flip(), arrow({\n        element: settings.arrowRef,\n        padding: settings.arrowOffset\n      })].concat(_toConsumableArray(settings.inline ? [inline()] : []))\n    }),\n    x = _useFloating.x,\n    y = _useFloating.y,\n    reference = _useFloating.reference,\n    floating = _useFloating.floating,\n    context = _useFloating.context,\n    refs = _useFloating.refs,\n    update = _useFloating.update,\n    placement = _useFloating.placement,\n    _useFloating$middlewa = _useFloating.middlewareData.arrow,\n    _useFloating$middlewa2 = _useFloating$middlewa === void 0 ? {} : _useFloating$middlewa,\n    arrowX = _useFloating$middlewa2.x,\n    arrowY = _useFloating$middlewa2.y;\n  var _useInteractions = useInteractions([useHover(context, {\n      enabled: settings.events.hover,\n      delay: withinGroup ? groupDelay : {\n        open: settings.openDelay,\n        close: settings.closeDelay\n      },\n      mouseOnly: !settings.events.touch\n    }), useFocus(context, {\n      enabled: settings.events.focus,\n      keyboardOnly: true\n    }), useRole(context, {\n      role: \"tooltip\"\n    }), useDismiss(context, {\n      enabled: typeof settings.opened === void 0\n    }), useDelayGroup(context, {\n      id: uid\n    })]),\n    getReferenceProps = _useInteractions.getReferenceProps,\n    getFloatingProps = _useInteractions.getFloatingProps;\n  useFloatingAutoUpdate({\n    opened: opened,\n    positionDependencies: settings.positionDependencies,\n    floating: {\n      refs: refs,\n      update: update\n    }\n  });\n  useDidUpdate(function () {\n    var _a;\n    (_a = settings.onPositionChange) == null ? void 0 : _a.call(settings, placement);\n  }, [placement]);\n  var isGroupPhase = opened && currentId && currentId !== uid;\n  return {\n    x: x,\n    y: y,\n    arrowX: arrowX,\n    arrowY: arrowY,\n    reference: reference,\n    floating: floating,\n    getFloatingProps: getFloatingProps,\n    getReferenceProps: getReferenceProps,\n    isGroupPhase: isGroupPhase,\n    opened: opened,\n    placement: placement\n  };\n}\nexport { useTooltip };","map":{"version":3,"mappings":"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","names":["useTooltip","settings","useState","uncontrolledOpened","setUncontrolledOpened","controlled","opened","withinGroup","useTooltipGroupContext","uid","useId","useDelayGroupContext","groupDelay","delay","currentId","setCurrentId","onChange","useCallback","_opened","useFloating","placement","position","open","onOpenChange","middleware","offset","shift","padding","flip","arrow","element","arrowRef","arrowOffset","inline","x","y","reference","floating","context","refs","update","middlewareData","arrowX","arrowY","useInteractions","useHover","enabled","events","hover","openDelay","close","closeDelay","mouseOnly","touch","useFocus","focus","keyboardOnly","useRole","role","useDismiss","useDelayGroup","id","getReferenceProps","getFloatingProps","useFloatingAutoUpdate","positionDependencies","useDidUpdate","_a","onPositionChange","call","isGroupPhase"],"sources":["/workspaces/mantine-react-router-cats/node_modules/@mantine/core/src/Tooltip/use-tooltip.ts"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport {\n  useFloating,\n  flip,\n  arrow,\n  offset,\n  shift,\n  useInteractions,\n  useHover,\n  useFocus,\n  useRole,\n  useDismiss,\n  useDelayGroupContext,\n  useDelayGroup,\n  inline,\n} from '@floating-ui/react-dom-interactions';\nimport { useId, useDidUpdate } from '@mantine/hooks';\nimport { useTooltipGroupContext } from './TooltipGroup/TooltipGroup.context';\nimport { FloatingPosition, useFloatingAutoUpdate } from '../Floating';\n\ninterface UseTooltip {\n  position: FloatingPosition;\n  closeDelay: number;\n  openDelay: number;\n  onPositionChange?(position: FloatingPosition): void;\n  opened?: boolean;\n  offset: number;\n  arrowRef?: React.RefObject<HTMLDivElement>;\n  arrowOffset: number;\n  events: { hover: boolean; focus: boolean; touch: boolean };\n  positionDependencies: any[];\n  inline: boolean;\n}\n\nexport function useTooltip(settings: UseTooltip) {\n  const [uncontrolledOpened, setUncontrolledOpened] = useState(false);\n  const controlled = typeof settings.opened === 'boolean';\n  const opened = controlled ? settings.opened : uncontrolledOpened;\n  const withinGroup = useTooltipGroupContext();\n  const uid = useId();\n\n  const { delay: groupDelay, currentId, setCurrentId } = useDelayGroupContext();\n\n  const onChange = useCallback(\n    (_opened: boolean) => {\n      setUncontrolledOpened(_opened);\n\n      if (_opened) {\n        setCurrentId(uid);\n      }\n    },\n    [setCurrentId, uid]\n  );\n\n  const {\n    x,\n    y,\n    reference,\n    floating,\n    context,\n    refs,\n    update,\n    placement,\n    middlewareData: { arrow: { x: arrowX, y: arrowY } = {} },\n  } = useFloating({\n    placement: settings.position,\n    open: opened,\n    onOpenChange: onChange,\n    middleware: [\n      offset(settings.offset),\n      shift({ padding: 8 }),\n      flip(),\n      arrow({ element: settings.arrowRef, padding: settings.arrowOffset }),\n      ...(settings.inline ? [inline()] : []),\n    ],\n  });\n\n  const { getReferenceProps, getFloatingProps } = useInteractions([\n    useHover(context, {\n      enabled: settings.events.hover,\n      delay: withinGroup ? groupDelay : { open: settings.openDelay, close: settings.closeDelay },\n      mouseOnly: !settings.events.touch,\n    }),\n    useFocus(context, { enabled: settings.events.focus, keyboardOnly: true }),\n    useRole(context, { role: 'tooltip' }),\n    // cannot be used with controlled tooltip, page jumps\n    useDismiss(context, { enabled: typeof settings.opened === undefined }),\n    useDelayGroup(context, { id: uid }),\n  ]);\n\n  useFloatingAutoUpdate({\n    opened,\n    positionDependencies: settings.positionDependencies,\n    floating: { refs, update },\n  });\n\n  useDidUpdate(() => {\n    settings.onPositionChange?.(placement);\n  }, [placement]);\n\n  const isGroupPhase = opened && currentId && currentId !== uid;\n\n  return {\n    x,\n    y,\n    arrowX,\n    arrowY,\n    reference,\n    floating,\n    getFloatingProps,\n    getReferenceProps,\n    isGroupPhase,\n    opened,\n    placement,\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}