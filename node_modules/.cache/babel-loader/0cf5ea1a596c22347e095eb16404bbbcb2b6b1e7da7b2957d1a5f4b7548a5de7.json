{"ast":null,"code":"import _slicedToArray from \"/workspaces/mantine-react-router-cats/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState, useRef, useEffect } from 'react';\nfunction useDebouncedState(defaultValue, wait) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    leading: false\n  };\n  var _useState = useState(defaultValue),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  var timeoutRef = useRef(null);\n  var leadingRef = useRef(true);\n  var clearTimeout = function clearTimeout() {\n    return window.clearTimeout(timeoutRef.current);\n  };\n  useEffect(function () {\n    return clearTimeout;\n  }, []);\n  var debouncedSetValue = function debouncedSetValue(newValue) {\n    clearTimeout();\n    if (leadingRef.current && options.leading) {\n      setValue(newValue);\n    } else {\n      timeoutRef.current = window.setTimeout(function () {\n        leadingRef.current = true;\n        setValue(newValue);\n      }, wait);\n    }\n    leadingRef.current = false;\n  };\n  return [value, debouncedSetValue];\n}\nexport { useDebouncedState };","map":{"version":3,"mappings":";;AACO,SAASA,iBAAiB,CAACC,YAAY,EAAEC,IAAI,EAAgC;EAAA,IAA9BC,OAAO,uEAAG;IAAEC,OAAO,EAAE;EAAK,CAAE;EAChF,gBAA0BC,QAAQ,CAACJ,YAAY,CAAC;IAAA;IAAzCK,KAAK;IAAEC,QAAQ;EACtB,IAAMC,UAAU,GAAGC,MAAM,CAAC,IAAI,CAAC;EAC/B,IAAMC,UAAU,GAAGD,MAAM,CAAC,IAAI,CAAC;EAC/B,IAAME,YAAY,GAAG,SAAfA,YAAY;IAAA,OAASC,MAAM,CAACD,YAAY,CAACH,UAAU,CAACK,OAAO,CAAC;EAAA;EAClEC,SAAS,CAAC;IAAA,OAAMH,YAAY;EAAA,GAAE,EAAE,CAAC;EACjC,IAAMI,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIC,QAAQ,EAAK;IACtCL,YAAY,EAAE;IACd,IAAID,UAAU,CAACG,OAAO,IAAIV,OAAO,CAACC,OAAO,EAAE;MACzCG,QAAQ,CAACS,QAAQ,CAAC;IACxB,CAAK,MAAM;MACLR,UAAU,CAACK,OAAO,GAAGD,MAAM,CAACK,UAAU,CAAC,YAAM;QAC3CP,UAAU,CAACG,OAAO,GAAG,IAAI;QACzBN,QAAQ,CAACS,QAAQ,CAAC;MAC1B,CAAO,EAAEd,IAAI,CAAC;IACd;IACIQ,UAAU,CAACG,OAAO,GAAG,KAAK;EAC9B,CAAG;EACD,OAAO,CAACP,KAAK,EAAES,iBAAiB,CAAC;AACnC","names":["useDebouncedState","defaultValue","wait","options","leading","useState","value","setValue","timeoutRef","useRef","leadingRef","clearTimeout","window","current","useEffect","debouncedSetValue","newValue","setTimeout"],"sources":["/workspaces/mantine-react-router-cats/node_modules/@mantine/hooks/src/use-debounced-state/use-debounced-state.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nexport function useDebouncedState<T = any>(\n  defaultValue: T,\n  wait: number,\n  options = { leading: false }\n) {\n  const [value, setValue] = useState(defaultValue);\n  const timeoutRef = useRef<number>(null);\n  const leadingRef = useRef(true);\n\n  const clearTimeout = () => window.clearTimeout(timeoutRef.current);\n  useEffect(() => clearTimeout, []);\n\n  const debouncedSetValue = (newValue: T) => {\n    clearTimeout();\n    if (leadingRef.current && options.leading) {\n      setValue(newValue);\n    } else {\n      timeoutRef.current = window.setTimeout(() => {\n        leadingRef.current = true;\n        setValue(newValue);\n      }, wait);\n    }\n    leadingRef.current = false;\n  };\n\n  return [value, debouncedSetValue] as const;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}